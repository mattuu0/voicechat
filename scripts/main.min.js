function audio_set_mute(e){for(var t of mediastream.getAudioTracks())t.enabled=!e}function client_init(e){connectdict[e]={streams:{},conn:null,tags:["observer"],username:"",calls:[]}}function senadll(e){for(var t of Object.keys(connectdict))if(t!=sessionuuid)try{connectdict[t].conn.send(e)}catch(e){}}function close_call(e){for(var t of connectdict[e].calls){try{t.peerConnection.close()}catch(e){}try{t.close()}catch(e){}}}function change_call(e,t){"team_A"==t?connectdict[sessionuuid].tags.includes("team_A")?call_Connect(e.userid,"audio",mediastream,{streamid:e.args.streamid}):connectdict[sessionuuid].tags.includes("team_B")?call_Connect(e.userid,"audio",null,{streamid:""}):connectdict[sessionuuid].tags.includes("observer")&&call_Connect(e.userid,"audio",null,{streamid:e.args.streamid}):"team_B"==t?connectdict[sessionuuid].tags.includes("team_B")?call_Connect(e.userid,"audio",mediastream,{streamid:e.args.streamid}):connectdict[sessionuuid].tags.includes("team_A")?call_Connect(e.userid,"audio",null,{streamid:""}):connectdict[sessionuuid].tags.includes("observer")&&call_Connect(e.userid,"audio",null,{streamid:e.args.streamid}):"observer"==t&&(connectdict[sessionuuid].tags.includes("observer")?call_Connect(e.userid,"audio",mediastream,{streamid:e.args.streamid}):connectdict[sessionuuid].tags.includes("team_A")?call_Connect(e.userid,"audio",mediastream,{streamid:""}):connectdict[sessionuuid].tags.includes("team_B")&&call_Connect(e.userid,"audio",mediastream,{streamid:""}))}function recv_data(e,t){var n=parsecommand(t);if("Send_My_Data"==n.command){var c=gencommand("All_Connect");for(var i of n.args.now_list)i in connectdict||connect_conn(i,c);n.args.tags.includes("observer")?call_Connect(n.userid,"audio",mediastream,{streamid:n.args.audio_Stramid}):call_Connect(n.userid,"audio",null,{streamid:n.args.audio_Stramid}),connectdict[n.userid].username=n.args.username,connectdict[n.userid].usericon=n.args.usericon,connectdict[n.userid].tags=n.args.tags}else if("Send_New_Data"==n.command)n.args.tags.includes("observer")?call_Connect(e.peer,"audio",mediastream,{streamid:n.args.audio_Stramid}):call_Connect(e.peer,"audio",null,{streamid:n.args.audio_Stramid}),connectdict[e.peer].username=n.args.username,connectdict[e.peer].usericon=n.args.usericon,connectdict[e.peer].tags=n.args.tags;else if("All_Connect"==n.command){n.userid in connectdict||client_init(n.userid),connectdict[n.userid].username=n.args.username,connectdict[n.userid].usericon=n.args.usericon;var s=gencommand("Send_New_Data",{tags:connectdict[sessionuuid].tags,audio_Stramid:usermediaid});e.send(s)}else if("New_Connect"==n.command){connectdict[n.userid].username=n.args.username,connectdict[n.userid].usericon=n.args.usericon;s=gencommand("Send_My_Data",{tags:connectdict[sessionuuid].tags,now_list:Object.keys(connectdict),audio_Stramid:usermediaid});e.send(s)}else if("Move_Event_Command"==n.command)if("observer"==n.args.move_tag){if(connectdict[n.userid].tags.includes("observer"))return;close_call(n.userid),connectdict[n.userid].tags=[],connectdict[n.userid].tags.push("observer"),change_call(n,"observer")}else if("team_A"==n.args.move_tag){if(connectdict[n.userid].tags.includes("team_A"))return;close_call(n.userid),connectdict[n.userid].tags=[],connectdict[n.userid].tags.push("team_A"),change_call(n,"team_A")}else if("team_B"==n.args.move_tag){if(connectdict[n.userid].tags.includes("team_B"))return;close_call(n.userid),connectdict[n.userid].tags=[],connectdict[n.userid].tags.push("team_B"),change_call(n,"team_B")}}function send_Close_Event(e){for(var t of Object.keys(connectdict[e].streams))try{connectdict[e][t].remove()}catch(e){}try{delete connectdict[e]}catch(e){}}function connect_conn(e,t){if(e in connectdict||client_init(e),e!=sessionuuid){var n=peer.connect(e);connectdict[e].conn=n,n.on("open",function(){n.send(t)}),n.on("data",function(e){recv_data(n,e)}),n.on("close",function(){send_Close_Event(e)})}}function createEmptyAudioTrack(){const e=new AudioContext,t=e.createOscillator(),n=t.connect(e.createMediaStreamDestination());t.start();const c=n.stream.getAudioTracks()[0];return Object.assign(c,{enabled:!1})}function call_Connect(e,t,n,c){if(e!=sessionuuid){if(e in connectdict||client_init(e),c.stream_type=t,null==n){const t=createEmptyAudioTrack(),n=new MediaStream([t]);c.is_empty=!0;var i=peer.call(e,n,{metadata:c})}else{c.is_empty=!1;i=peer.call(e,n,{metadata:c})}var s;""==c.streamid&&(s=show_stream(null,"empty",e)),connectdict[e].calls.push(i),i.on("stream",function(n){if(void 0!==n){var c=e;s=show_stream(n,t,c)}}),i.on("close",function(){try{s.remove()}catch(e){}})}}function show_stream(e,t,n){var c,i=uuidv4();if(connectdict[n].tags.includes("observer")?c=Observer_users_show:connectdict[n].tags.includes("team_A")?c=teamA_users_show:connectdict[n].tags.includes("team_B")&&(c=teamB_users_show),"audio"==t){var s=document.createElement("div"),a=new Audio;a.srcObject=e,a.controls=!0,a.play(),connectdict[n][i]=s,connectdict[n].streams[i]="audio";var o=document.createElement("img");return o.src=connectdict[n].usericon,s.appendChild(o),s.appendChild(a),c.appendChild(s),s}if("video"==t){var r=document.createElement("video");return r.srcObject=e,r.controls=!0,r.width=700,r.play(),c.appendChild(r),connectdict[n][i]=r,connectdict[n].streams[i]="video",r}if("empty"==t){s=document.createElement("div");connectdict[n][i]=s,connectdict[n].streams[i]="empty";o=document.createElement("img");return o.src=connectdict[n].usericon,s.appendChild(o),c.appendChild(s),s}}function gencommand(e,t){null==t&&(t={}),t.username=username,t.usericon=usericon;var n={command:e,userid:sessionuuid,args:t};return JSON.stringify(n)}function parsecommand(e){return JSON.parse(e)}function toBase64Url(e,t){var n=new XMLHttpRequest;n.onload=function(){var e=new FileReader;e.onloadend=function(){t(e.result)},e.readAsDataURL(n.response)},n.open("GET",e),n.responseType="blob",n.send()}function start_peer(){try{navigator.mediaDevices.getUserMedia({audio:!0,video:!1}).then(function(e){mediastream=e,streamdict[usermediaid]=mediastream,connectdict[sessionuuid].audioid=usermediaid,audio_set_mute(!0),toBase64Url("https://ui-avatars.com/api/name="+String(username_input.value)+"?background=random",function(e){if(usericon=e,showid.innerHTML=sessionuuid,username=username_input.value,!(String(connectid_input.value).length<1)){var t=gencommand("New_Connect",{audio_id:usermediaid,tags:connectdict[sessionuuid].tags,username:username_input.value});connect_conn(idinput.value,t)}connectdict[sessionuuid].usericon=usericon,connectdict[sessionuuid].tags=["observer"],myicon=show_stream(null,"empty",sessionuuid)})}).catch(function(e){alert("使用するにはマイクへのアクセスを許可してください"),window.location.reload()})}catch(e){alert("使用するにはマイクへのアクセスを許可してください"),mediastream=null,window.location.reload()}}function move_event(e){if(!connectdict[sessionuuid].tags.includes(e)){for(var t of Object.keys(connectdict))try{for(var n of connectdict[t].calls){try{n.peerConnection.close()}catch(e){}try{n.close()}catch(e){}}}catch(e){}connectdict[sessionuuid].tags=[e],"team_A"==e?show_team.textContent="Aチーム":"team_B"==e?show_team.textContent="Bチーム":"observer"==e&&(show_team.textContent="観察者");try{myicon.remove()}catch(e){}myicon=show_stream(null,"empty",sessionuuid)}}var username,usericon,sessionuuid=uuidv4(),connect_btn=document.getElementById("connect_button"),username_input=document.getElementById("username_input"),connectid_input=document.getElementById("connectid_input"),first_form=document.getElementById("first_form"),full_overlay=document.getElementById("first_overlay"),showid=document.getElementById("show_roomid"),muteinput=document.getElementById("toggle"),Observer_users_show=document.getElementById("observer_area_id"),teamA_users_show=document.getElementById("team_A_area"),teamB_users_show=document.getElementById("team_B_area"),idinput=document.getElementById("connectid_input"),show_team=document.getElementById("show_team"),peer=new Peer(sessionuuid,options),connectdict={};client_init(sessionuuid);var mediastream,myicon,streamdict={},usermediaid=uuidv4(),options={host:location.hostname,port:location.port,path:"/api"};muteinput.addEventListener("change",function(){audio_set_mute(!muteinput.checked)}),peer.on("call",function(e){if(e.peer in connectdict||client_init(e.peer),void 0!==e.metadata){var t=e.metadata.streamid;void 0!==streamdict[t]?e.answer(streamdict[t]):e.answer()}else e.answer();var n;connectdict[e.peer].calls.push(e),e.on("stream",function(t){if(e.metadata.is_empty)n=show_stream(t,"empty",e.peer);else{var c=e.metadata.stream_type;n=show_stream(t,c,e.peer)}}),e.on("close",function(){try{n.remove()}catch(e){}})}),peer.on("connection",function(e){e.on("data",function(t){recv_data(e,t)}),e.on("open",function(){e.peer in connectdict||client_init(e.peer),connectdict[e.peer].conn=e}),e.on("close",function(){send_Close_Event(e.peer)})}),connect_btn.addEventListener("click",function(){String(username_input.value).length<1?alert("ユーザー名を入力してください"):String(connectid_input.value).length<1&&!window.confirm("接続先IDが入力されていません、新たにルームを作成しますか?")||(first_form.classList.toggle("after_login"),full_overlay.classList.toggle("after-Overlay"),document.body.style.backgroundColor="white",start_peer())}),Observer_users_show.addEventListener("dblclick",function(){move_event("observer");var e=gencommand("Move_Event_Command",{move_tag:"observer",streamid:usermediaid});senadll(e)}),teamA_users_show.addEventListener("dblclick",function(){move_event("team_A");var e=gencommand("Move_Event_Command",{move_tag:"team_A",streamid:usermediaid});senadll(e)}),teamB_users_show.addEventListener("dblclick",function(){move_event("team_B");var e=gencommand("Move_Event_Command",{move_tag:"team_B",streamid:usermediaid});senadll(e)});